---
title:  PostgreSQL日志分析工具
tags: postgresql
---


----------

> PostgreSQL日志审计影响性能，在不需要问题排查的时候可以关闭


[toc]


## 1. pgBadger安装

pgBadger[主页](https://pgbadger.darold.net/)
pgBadger[下载地址](https://github.com/darold/pgbadger/releases)

[Text-CSV_XS-1.39](./attachments/Text-CSV_XS-1.39.tgz)
[pgbadger-10.3](./attachments/pgbadger-10.3.tar.gz)

### 环境

- Red Hat Enterprise Linux Server release 7.4
- PostgreSQL 9.6.0

### 安装包版本

- Text-CSV_XS-1.39
- pgbadger-10.3

### 安装

1. 上传tar包到任意目录

2. 切换到tar包目录执行安装

``` shell
plugs=`echo -e "Text-CSV_XS-1.39\npgbadger-10.3"`;
baseDir=`pwd`; 
for plug in ${plugs}; 
do 
    tar zxf ${plug}.*; 
	cd ${baseDir}/${plug}; 
	perl Makefile.PL && make && make install; 
    cd ${baseDir};
done;
```

## 2. PostgreSQL日志审计配置

postgresql.conf增加配置后重启数据库

``` dsconfig
# 选择的csv格式日志，生成要日志指定csv格式日志输入
log_destination = 'csvlog'
logging_collector = on
log_directory = 'pg_log'
log_filename = 'postgresql-%w.log'
log_file_mode = 0640
log_truncate_on_rotation = off
log_rotation_age = 1d
log_line_prefix = '%t [%r]-[%p]: %l user=%u,db=%d'
log_lock_waits = off
log_checkpoints = off
log_connections = off
log_disconnections = off
log_duration = off
log_min_duration_statement = 0
```

## 3. 日志生成

### 日志示例增加

``` shell
# 连接数据库生成几条日志记录
for i in `seq 1 4`; 
do 
    psql -U postgres -d postgres << EOF
create table testtable${i}(
id int,
name varchar(255));
insert into testtable${i} values (1, 'hello');
\d
select * from testtable${i};
\q
EOF
done;
```

### 生成日志

``` shell
# 开启httpd服务
systemctl start httpd.service
# 创建日志输出目录
mkdir -p /var/www/html/pgbadger/;
# 查找一下pgbadger命令所在目录
which pgbadger
# 指定命令路径 -> 指定日志路径(名称根据log_filename参数来的) -> 指定httpd的服务为输出目录: 增量生成日志
/usr/local/bin/pgbadger -I -q /data/pgdata/pg_log/postgresql-`date "+%w".csv` -O /var/www/html/pgbadger/
```

### 定时任务

``` shell
# /etc/cron.d目录下创建文件pgbadger_cron并添加如下内容
# 凌晨2点补全目录
0 2 * * * root /usr/bin/mkdir -p /var/www/html/pgbadger/
# 凌晨2点10分分析前天统计日志
10 2 * * * root /usr/local/bin/pgbadger -I -q /data/pgdata/pg_log/postgresql-$(expr `date "+%w"` - 1).csv -O /var/www/html/pgbadger/


# 重启crond
systemctl restart crond.service
```

### 结果示例

![增量日志索引页](https://www.github.com/hzhang123/bolgFiles/raw/master/xiaoshujiang/1561381325439.png)

![概览页](https://www.github.com/hzhang123/bolgFiles/raw/master/xiaoshujiang/1561381400768.png)

![SQL统计](https://www.github.com/hzhang123/bolgFiles/raw/master/xiaoshujiang/1561381448627.png)

等等....